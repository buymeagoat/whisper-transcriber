version: '3.8'

services:
  # Redis for task queue
  redis:
    image: redis:7-alpine
    container_name: whisper-redis
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    command: >
      redis-server 
      --appendonly yes 
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend

  # Main application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: whisper-app
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DATABASE_URL=sqlite:///app/data/app.db
      - WHISPER_MODEL_DIR=/app/models
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    volumes:
      - app_storage:/app/storage
      - app_models:/app/models:ro
      - app_data:/app/data
      - app_logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - frontend
      - backend

  # Celery worker
  worker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: whisper-worker
    restart: unless-stopped
    environment:
      - SERVICE_TYPE=worker
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DATABASE_URL=sqlite:///app/data/app.db
      - WHISPER_MODEL_DIR=/app/models
      - LOG_LEVEL=INFO
      - WORKER_CONCURRENCY=1
      - ENVIRONMENT=production
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    volumes:
      - app_storage:/app/storage
      - app_models:/app/models:ro
      - app_data:/app/data
      - app_logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      app:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    command: celery -A api.worker worker --loglevel=info --concurrency=1
    healthcheck:
      test: ["CMD-SHELL", "celery -A api.worker call api.services.app_worker.smoke_transcription --args '[]'"]
      interval: 60s
      timeout: 30s
      retries: 3
    networks:
      - backend

volumes:
  redis_data:
    driver: local
  app_data:
    driver: local
  app_storage:
    driver: local
  app_models:
    driver: local
  app_logs:
    driver: local

networks:
  frontend:
    name: whisper-frontend
    driver: bridge
  backend:
    name: whisper-backend
    driver: bridge
    internal: true