# T031: Production Deployment and Monitoring - Enhanced Prometheus Configuration
# Comprehensive monitoring configuration for Whisper Transcriber

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'whisper-transcriber-prod'
    replica: 'prometheus-1'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load alerting rules
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: '/prometheus/metrics'
    scrape_interval: 30s

  # Main application metrics
  - job_name: 'whisper-app'
    static_configs:
      - targets: ['app:9091']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # System metrics via Node Exporter
  - job_name: 'node'
    static_configs:
      - targets: ['node_exporter:9100']
    scrape_interval: 15s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'whisper-transcriber-host'

  # Container metrics via cAdvisor
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__meta_docker_container_name]
        target_label: container_name

  # PostgreSQL metrics (requires postgres_exporter)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres_exporter:9187']
    scrape_interval: 30s
    params:
      collect[]:
        - 'pg_stat_database'
        - 'pg_stat_user_tables'
        - 'pg_stat_activity'
        - 'pg_locks'

  # Redis metrics (requires redis_exporter)
  - job_name: 'redis'
    static_configs:
      - targets: ['redis_exporter:9121']
    scrape_interval: 30s

  # Nginx metrics (requires nginx-prometheus-exporter)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx_exporter:9113']
    scrape_interval: 30s

  # Celery metrics
  - job_name: 'celery'
    static_configs:
      - targets: ['worker:9091']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Elasticsearch metrics (if enabled)
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch:9200']
    metrics_path: '/_prometheus/metrics'
    scrape_interval: 60s

  # Custom application metrics
  - job_name: 'whisper-custom'
    static_configs:
      - targets: ['app:8000']
    metrics_path: '/api/metrics'
    scrape_interval: 30s
    basic_auth:
      username: 'metrics'
      password: 'metrics-password'

  # Health check endpoints
  - job_name: 'health-checks'
    static_configs:
      - targets: 
        - 'app:8000'
        - 'postgres:5432'
        - 'redis:6379'
    metrics_path: '/health'
    scrape_interval: 60s
    scrape_timeout: 5s

# Recording rules for performance optimization
recording_rules:
  - name: 'whisper_app_rules'
    rules:
      # Request rate over 5 minutes
      - record: 'whisper:request_rate_5m'
        expr: 'rate(http_requests_total[5m])'
        
      # Error rate over 5 minutes
      - record: 'whisper:error_rate_5m'
        expr: 'rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m])'
        
      # Response time percentiles
      - record: 'whisper:response_time_p95'
        expr: 'histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))'
        
      - record: 'whisper:response_time_p99'
        expr: 'histogram_quantile(0.99, rate(http_request_duration_seconds_bucket[5m]))'
        
      # Job processing metrics
      - record: 'whisper:job_completion_rate_5m'
        expr: 'rate(transcription_jobs_completed_total[5m])'
        
      - record: 'whisper:job_error_rate_5m'
        expr: 'rate(transcription_jobs_failed_total[5m])'
        
      # Resource utilization
      - record: 'whisper:cpu_usage'
        expr: '100 - (avg(rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)'
        
      - record: 'whisper:memory_usage_percent'
        expr: '(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100'
        
      - record: 'whisper:disk_usage_percent'
        expr: '100 - ((node_filesystem_avail_bytes{mountpoint="/"} / node_filesystem_size_bytes{mountpoint="/"}) * 100)'

# Remote write configuration (for external monitoring services)
remote_write:
  # Uncomment and configure for external monitoring
  # - url: "https://prometheus-remote-write-endpoint/api/v1/write"
  #   basic_auth:
  #     username: "your-username"
  #     password: "your-password"
  #   queue_config:
  #     max_samples_per_send: 1000
  #     max_shards: 200
  #     capacity: 2500

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    path: /prometheus
    wal-compression: true